 using maps---------------------------------------->>>>>>>>>>>>>>>>>>>

class Solution {
public:
    int firstUniqChar(string s) {
        unordered_map<char,int> f;
        for(int i = 0;i<s.length();i++){
            f[s[i]]++;
        }

        for(int i =0;i<s.length();i++){
            if(f[s[i]] == 1){
                return i;
            }
        }
        return -1;

    }
};


using hashing ---------------------------------------------------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>



class Solution {
public:
    int firstUniqChar(string s) {
        int freq[26] = {0};  
        
        // First pass: count the frequency of each character
        for (int i = 0; i < s.length(); i++) {
            freq[s[i] - 'a']++;  
        }
        
        // Second pass: find the first unique character
        for (int i = 0; i < s.length(); i++) {
            if (freq[s[i] - 'a'] == 1) {
                return i; 
            }
        }
        
        return -1; 
    }
};



