void sortColors(int* nums, int numsSize) {
    int a = 0 , b = 0 , c = 0;
    for(int i = 0;i<numsSize;i++){
        if(nums[i] == 0){
            a++;
        }
        else if(nums[i] == 1){
            b++;
        }
        else{
              c++;
        }
    }

    for(int i = 0;i<a;i++){
        nums[i] = 0;
    }
    for(int i=a;i<a+b;i++){
        nums[i] = 1;
    }
    for(int i = a+b;i<numsSize;i++){
        nums[i] = 2;
    }
}



---------------------------------------------------------------------------------------------------------------------------------------------------------------->

this is second solution : ----------------->



void sort012(vector<int>& arr) {
    int z = 0, o = 0, t = 0;

    // First pass: Count the number of 0s, 1s, and 2s.
    for (int i = 0; i < arr.size(); i++) {
        if (arr[i] == 0) z++;
        else if (arr[i] == 1) o++;
        else if (arr[i] == 2) t++;
    }

    // Second pass: Fill the array based on the counts.
    int i = 0;

    // Place z number of 0s
    while (z--) {
        arr[i++] = 0;
    }

    // Place o number of 1s
    while (o--) {
        arr[i++] = 1;
    }

    // Place t number of 2s
    while (t--) {
        arr[i++] = 2;
    }
}
